name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run unit tests
        run: ./mvnw test

      - name: Build Docker image
        run: docker build -t biztrips-app .

      - name: Start application
        run: docker-compose up --build -d app

      - name: Wait for application startup
        run: |
          echo "Waiting for application to start..."
          timeout 60 bash -c 'until curl -f http://localhost:8083/actuator/health; do sleep 2; done'

      - name: Run Cypress tests
        run: docker-compose up --build cypress
        continue-on-error: true

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-${{ github.run_number }}
          path: cypress/screenshots/
          retention-days: 7
          if-no-files-found: ignore

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos-${{ github.run_number }}
          path: cypress/videos/
          retention-days: 7
          if-no-files-found: ignore

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.run_number }}
          path: |
            cypress/screenshots/
            cypress/videos/
            target/surefire-reports/
          retention-days: 7
          if-no-files-found: ignore

      - name: Stop application
        if: always()
        run: docker-compose down

      - name: Cleanup Docker
        if: always()
        run: docker system prune -f

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: biztrips-app:latest
          outputs: type=docker,dest=/tmp/biztrips-app.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-${{ github.run_number }}
          path: /tmp/biztrips-app.tar
          retention-days: 7
          compression-level: 6

  security-scan:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image-${{ github.run_number }}
          path: /tmp

      - name: Load Docker image
        run: docker load --input /tmp/biztrips-app.tar

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "biztrips-app:latest"
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          exit-code: "0"
          timeout: "10m"
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db
          # Uncomment the line below and add NVD_API_KEY to your repository secrets for faster scans
          # TRIVY_NVD_API_KEY: ${{ secrets.NVD_API_KEY }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-scan-results-${{ github.run_number }}
          path: trivy-results.sarif
          retention-days: 7
          if-no-files-found: ignore
